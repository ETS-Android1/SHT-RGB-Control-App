// Generated by view binder compiler. Do not edit!
package com.example.helloworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helloworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPresetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonBlue;

  @NonNull
  public final Button buttonCyan;

  @NonNull
  public final Button buttonFade;

  @NonNull
  public final Button buttonFlash;

  @NonNull
  public final Button buttonGreen;

  @NonNull
  public final Button buttonMagenta;

  @NonNull
  public final Button buttonMaroon;

  @NonNull
  public final Button buttonOff;

  @NonNull
  public final Button buttonRed;

  @NonNull
  public final Button buttonWhite;

  @NonNull
  public final Button buttonYellow;

  @NonNull
  public final Button buttonback;

  private FragmentPresetBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonBlue,
      @NonNull Button buttonCyan, @NonNull Button buttonFade, @NonNull Button buttonFlash,
      @NonNull Button buttonGreen, @NonNull Button buttonMagenta, @NonNull Button buttonMaroon,
      @NonNull Button buttonOff, @NonNull Button buttonRed, @NonNull Button buttonWhite,
      @NonNull Button buttonYellow, @NonNull Button buttonback) {
    this.rootView = rootView;
    this.buttonBlue = buttonBlue;
    this.buttonCyan = buttonCyan;
    this.buttonFade = buttonFade;
    this.buttonFlash = buttonFlash;
    this.buttonGreen = buttonGreen;
    this.buttonMagenta = buttonMagenta;
    this.buttonMaroon = buttonMaroon;
    this.buttonOff = buttonOff;
    this.buttonRed = buttonRed;
    this.buttonWhite = buttonWhite;
    this.buttonYellow = buttonYellow;
    this.buttonback = buttonback;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPresetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPresetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_preset, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPresetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBlue;
      Button buttonBlue = ViewBindings.findChildViewById(rootView, id);
      if (buttonBlue == null) {
        break missingId;
      }

      id = R.id.buttonCyan;
      Button buttonCyan = ViewBindings.findChildViewById(rootView, id);
      if (buttonCyan == null) {
        break missingId;
      }

      id = R.id.buttonFade;
      Button buttonFade = ViewBindings.findChildViewById(rootView, id);
      if (buttonFade == null) {
        break missingId;
      }

      id = R.id.buttonFlash;
      Button buttonFlash = ViewBindings.findChildViewById(rootView, id);
      if (buttonFlash == null) {
        break missingId;
      }

      id = R.id.buttonGreen;
      Button buttonGreen = ViewBindings.findChildViewById(rootView, id);
      if (buttonGreen == null) {
        break missingId;
      }

      id = R.id.buttonMagenta;
      Button buttonMagenta = ViewBindings.findChildViewById(rootView, id);
      if (buttonMagenta == null) {
        break missingId;
      }

      id = R.id.buttonMaroon;
      Button buttonMaroon = ViewBindings.findChildViewById(rootView, id);
      if (buttonMaroon == null) {
        break missingId;
      }

      id = R.id.buttonOff;
      Button buttonOff = ViewBindings.findChildViewById(rootView, id);
      if (buttonOff == null) {
        break missingId;
      }

      id = R.id.buttonRed;
      Button buttonRed = ViewBindings.findChildViewById(rootView, id);
      if (buttonRed == null) {
        break missingId;
      }

      id = R.id.buttonWhite;
      Button buttonWhite = ViewBindings.findChildViewById(rootView, id);
      if (buttonWhite == null) {
        break missingId;
      }

      id = R.id.buttonYellow;
      Button buttonYellow = ViewBindings.findChildViewById(rootView, id);
      if (buttonYellow == null) {
        break missingId;
      }

      id = R.id.buttonback;
      Button buttonback = ViewBindings.findChildViewById(rootView, id);
      if (buttonback == null) {
        break missingId;
      }

      return new FragmentPresetBinding((ConstraintLayout) rootView, buttonBlue, buttonCyan,
          buttonFade, buttonFlash, buttonGreen, buttonMagenta, buttonMaroon, buttonOff, buttonRed,
          buttonWhite, buttonYellow, buttonback);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
